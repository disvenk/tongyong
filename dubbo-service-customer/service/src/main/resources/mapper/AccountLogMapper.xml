<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resto.service.customer.mapper.AccountLogMapper">
  <resultMap id="BaseResultMap" type="com.resto.api.customer.entity.AccountLog">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="remain" jdbcType="DECIMAL" property="remain" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="shop_detail_id" jdbcType="VARCHAR" property="shopDetailId" />
    <result column="freeze_return_date" jdbcType="TIMESTAMP" property="freezeReturnDate" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
  </resultMap>

  <select id="selectLogsByAccountId" resultType="com.resto.api.customer.entity.AccountLog">
    SELECT * from tb_account_log where account_id = #{accountId}
    ORDER BY create_time DESC, source DESC
  </select>

  <select id="selectByCustomerIdNumber" resultType="com.resto.api.customer.entity.AccountLog">
    select t1.id from tb_customer t
    LEFT JOIN tb_account_log t1 ON t.account_id = t1.account_id
    where t.id = #{id} and t1.source = 2
  </select>

  <select id="selectBrandMarketing" parameterType="java.util.Map" resultType="java.lang.String">
    (select
    case
    when source = 1 then concat_ws(':','plRedMoney',SUM(money))
    when source = 3 then concat_ws(':','czRedMoney',SUM(money))
    when source = 4 then concat_ws(':','fxRedMoney',SUM(money))
    end result
    from tb_account_log tal
    where source in (1,3,4) and create_time between #{beginDate} and date_add(#{endDate},interval 1 day)
    group by source)
    UNION
    (select
    case
    when payment_mode_id = 8 then concat_ws(':','dwRedMoney',ABS(SUM(pay_value)))
    when payment_mode_id = 11 then concat_ws(':','tcRedMoney',ABS(SUM(pay_value)))
    end
    from tb_order_payment_item
    where payment_mode_id in (8,11) and pay_time between #{beginDate} and date_add(#{endDate},interval 1 day)
    group by payment_mode_id)
    UNION
    (select
    case
    when coupon_type = 0 then concat_ws(':','zcCouponMoney',SUM(`value`))
    when coupon_type = 1 then concat_ws(':','yqCouponMoney',SUM(`value`))
    when coupon_type = 2 then CONCAT_WS(':','birthCouponMoney',SUM(`value`))
    end
    from tb_coupon
    where coupon_type in (0,1,2) and add_time between #{beginDate} and date_add(#{endDate},interval 1 day)
    group by coupon_type)
  </select>

  <!-- 根据 账户ID 查询 分享返利总额 -->
  <select id="selectByShareMoney" resultType="java.math.BigDecimal">
    SELECT sum(money) from tb_account_log where account_id = #{accountId} and source = 4
  </select>

  <!-- 根据 账户ID 查询 分享返利总数 -->
  <select id="selectByShareMoneyCount" resultType="java.lang.Integer">
    SELECT count(1) from tb_account_log where account_id = #{accountId} and source = 4
  </select>
</mapper>