<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resto.shop.web.dao.DocReturnHeaderDao">

<resultMap id="docReturnHeaderResult" type="com.resto.shop.web.model.DocReturnHeader">
    <result column="id" property="id"/>
    <result column="shop_detail_id" property="shopDetailId"/>
    <result column="order_code" property="orderCode"/>
    <result column="order_name" property="orderName"/>
    <result column="order_status" property="orderStatus"/>
    <result column="creater_id" property="createrId"/>
    <result column="gmt_modified" property="gmtModified"/>
    <result column="auditor" property="auditor"/>
    <result column="updater_id" property="updaterId"/>
    <result column="updater_name" property="updaterName"/>
    <result column="published_time" property="publishedTime"/>
    <result column="note" property="note"/>
    <result column="creater_name" property="createrName"/>
    <result column="gmt_create" property="gmtCreate"/>
</resultMap>

<sql id="docReturnHeader_columns">
    id,
    shop_detail_id,
    order_code,
    order_name,
    order_status,
    creater_id,
    gmt_modified,
    auditor,
    updater_id,
    updater_name,
    published_time,
    note,
    creater_name,
    gmt_create
</sql>

<sql id="docReturnHeader_sqlForInsert">
    shop_detail_id,
    order_code,
    order_name,
    order_status,
    creater_id,
    gmt_modified,
    auditor,
    updater_id,
    updater_name,
    published_time,
    note,
    creater_name,
    gmt_create
</sql>

<sql id="docReturnHeader_columnsForInsert">
    #{shopDetailId},
    #{orderCode},
    #{orderName},
    #{orderStatus},
    #{createrId},
    now(),
    #{auditor},
    #{updaterId},
    #{updaterName},
    #{publishedTime},
    #{note},
    #{createrName},
    now()
</sql>

<sql id="docReturnHeader_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="id != null">
            id = #{id},
        </if>
        <if test="shopDetailId != null">
            shop_detail_id = #{shopDetailId},
        </if>
        <if test="orderCode != null">
            order_code = #{orderCode},
        </if>
        <if test="orderName != null">
            order_name = #{orderName},
        </if>
        <if test="orderStatus != null">
            order_status = #{orderStatus},
        </if>
        <if test="createrId != null">
            creater_id = #{createrId},
        </if>
        <if test="auditor != null">
            auditor = #{auditor},
        </if>
        <if test="updaterId != null">
            updater_id = #{updaterId},
        </if>
        <if test="updaterName != null">
            updater_name = #{updaterName},
        </if>
        <if test="publishedTime != null">
            published_time = #{publishedTime},
        </if>
        <if test="note != null">
            note = #{note},
        </if>
        <if test="createrName != null">
            creater_name = #{createrName},
        </if>
    </set>
</sql>

<sql id="docReturnHeader_selector">
    select
    <include refid="docReturnHeader_columns"/>
    from doc_return_header
</sql>

<sql id="docReturnHeader_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.shopDetailId != null">
            AND shop_detail_id = #{data.shopDetailId}
        </if>
        <if test="data.orderCode != null">
            AND order_code = #{data.orderCode}
        </if>
        <if test="data.orderName != null">
            AND order_name = #{data.orderName}
        </if>
        <if test="data.orderStatus != null">
            AND order_status = #{data.orderStatus}
        </if>
        <if test="data.createrId != null">
            AND creater_id = #{data.createrId}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="data.auditor != null">
            AND auditor = #{data.auditor}
        </if>
        <if test="data.updaterId != null">
            AND updater_id = #{data.updaterId}
        </if>
        <if test="data.updaterName != null">
            AND updater_name = #{data.updaterName}
        </if>
        <if test="data.publishedTime != null">
            AND published_time = #{data.publishedTime}
        </if>
        <if test="data.note != null">
            AND note = #{data.note}
        </if>
        <if test="data.createrName != null">
            AND creater_name = #{data.createrName}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    ${item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    ${item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = ${item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} != ${item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> ${item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> ${item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', ${item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> ${item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> ${item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocReturnHeader">
    insert into doc_return_header
    (
        <include refid="docReturnHeader_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="docReturnHeader_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.resto.shop.web.model.DocReturnHeader">
    update doc_return_header
    <include refid="docReturnHeader_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.resto.shop.web.model.DocReturnHeader">
    update doc_return_header
    <set>
        gmt_modified = now(),
        <if test="update.id != null">
            id = #{update.id},
        </if>
        <if test="update.shopDetailId != null">
            shop_detail_id = #{update.shopDetailId},
        </if>
        <if test="update.orderCode != null">
            order_code = #{update.orderCode},
        </if>
        <if test="update.orderName != null">
            order_name = #{update.orderName},
        </if>
        <if test="update.orderStatus != null">
            order_status = #{update.orderStatus},
        </if>
        <if test="update.createrId != null">
            creater_id = #{update.createrId},
        </if>
        <if test="update.auditor != null">
            auditor = #{update.auditor},
        </if>
        <if test="update.updaterId != null">
            updater_id = #{update.updaterId},
        </if>
        <if test="update.updaterName != null">
            updater_name = #{update.updaterName},
        </if>
        <if test="update.publishedTime != null">
            published_time = #{update.publishedTime},
        </if>
        <if test="update.note != null">
            note = #{update.note},
        </if>
        <if test="update.createrName != null">
            creater_name = #{update.createrName},
        </if>
    </set>
    <include refid="docReturnHeader_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocReturnHeader">
    insert into doc_return_header
    (
        <include refid="docReturnHeader_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="docReturnHeader_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    <if test="id != null">
        ,id = #{id}
    </if>
    <if test="shopDetailId != null">
        ,shop_detail_id = #{shopDetailId}
    </if>
    <if test="orderCode != null">
        ,order_code = #{orderCode}
    </if>
    <if test="orderName != null">
        ,order_name = #{orderName}
    </if>
    <if test="orderStatus != null">
        ,order_status = #{orderStatus}
    </if>
    <if test="createrId != null">
        ,creater_id = #{createrId}
    </if>
    <if test="auditor != null">
        ,auditor = #{auditor}
    </if>
    <if test="updaterId != null">
        ,updater_id = #{updaterId}
    </if>
    <if test="updaterName != null">
        ,updater_name = #{updaterName}
    </if>
    <if test="publishedTime != null">
        ,published_time = #{publishedTime}
    </if>
    <if test="note != null">
        ,note = #{note}
    </if>
    <if test="createrName != null">
        ,creater_name = #{createrName}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update doc_return_header
    set is_delete = 1, gmt_modified = now()
    <include refid="docReturnHeader_query_segment"/>
</update>
<update id="deleteById">
    update doc_return_header
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>


<delete id="deletePhysicalById">
        delete from doc_return_header
        where id = #{id}
</delete>




<!-- query class -->
<sql id="docReturnHeader_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            ${item}
        </foreach>
    </if>
</sql>

<sql id="docReturnHeader_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="docReturnHeaderResult" parameterType="com.resto.shop.web.model.DocReturnHeader">
    <include refid="docReturnHeader_selector"/>
    <include refid="docReturnHeader_query_segment"/>
    <include refid="docReturnHeader_groupBy"/>
    <include refid="docReturnHeader_orderby"/>
</select>

<select id="query4Page" resultMap="docReturnHeaderResult" parameterType="com.resto.shop.web.model.DocReturnHeader">
    <include refid="docReturnHeader_selector"/>
    <include refid="docReturnHeader_query_segment"/>
    <include refid="docReturnHeader_groupBy"/>
    <include refid="docReturnHeader_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM doc_return_header
    <include refid="docReturnHeader_query_segment"/>
</select>

<select id="getById" resultMap="docReturnHeaderResult">
    <include refid="docReturnHeader_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="docReturnHeaderResult">
    <include refid="docReturnHeader_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>


<select id="queryJoin4Page" parameterType="java.lang.String" resultType="com.resto.shop.web.dto.DocReturnHeaderDetailDo">
    SELECT
        dh.creater_name as 'createrName',
        dh.gmt_create as 'gmtCreate',
        dh.order_code as 'orderCode',
        dh.supplier_id as 'supplierId',
        dh.id,
        dh.note,
        dh.auditor as 'auditor',
        dh.order_status as 'orderStatus',
        dh.order_name  as 'orderName',
        ms.top_email as 'topEmail',
        ms.top_contact as 'topContact',
        ms.top_mobile as 'topMobile',
        ms.sup_name as 'supName',
        stk.line_status AS 'lineStatus',
        stk.return_header_id AS 'returnHeaderId',
        stk.return_count as 'returnCount',
        mm.categoryOneName,
        mm.categoryThirdName,
        mm.categoryTwoName,
        mm.cityName,
        mm.materialName,
        mm.districtName,
        mm.materialCode,
        mm.provinceName,
        mm.materialType,
        mm.specName,
        mm.measureUnit,
        mm.unitName,
        mm.minMeasureUnit,
        mm.minUnitName
    FROM
    doc_return_header dh
    INNER JOIN md_supplier ms on dh.supplier_id =ms.id
    INNER JOIN doc_return_detail stk ON dh.id = stk.return_header_id
    INNER JOIN md_material_view mm ON stk.material_id = mm.id
    where
    dh.is_delete='0'
    AND ms.is_delete='0'
    and stk.is_delete='0'
    and dh.shop_detail_id= #{shopDetailId}
    and ms.shop_detail_id= #{shopDetailId}

</select>

</mapper>
