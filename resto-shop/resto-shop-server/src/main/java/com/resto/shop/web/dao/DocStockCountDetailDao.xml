<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resto.shop.web.dao.DocStockCountDetailDao">

    <resultMap id="docStockCountDetailResult" type="com.resto.shop.web.model.DocStockCountDetail">
        <result column="id" property="id"/>
        <result column="theory_stock_count" property="theoryStockCount"/>
        <result column="available_stock_count" property="availableStockCount"/>
        <result column="defferent_reason" property="defferentReason"/>
        <result column="stock_count_header_id" property="stockCountHeaderId"/>
        <result column="stock_count_header_code" property="stockCountHeaderCode"/>
        <result column="stock_count_user_id" property="stockCountUserId"/>
        <result column="stock_count_user_name" property="stockCountUserName"/>
        <result column="creater_id" property="createrId"/>
        <result column="act_stock_count" property="actStockCount"/>
        <result column="is_damaged" property="isDamaged"/>
        <result column="creater_name" property="createrName"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="updater_name" property="updaterName"/>
        <result column="line_status" property="lineStatus"/>
        <result column="updater_id" property="updaterId"/>
        <result column="note" property="note"/>
        <result column="material_id" property="materialId"/>
    </resultMap>

    <sql id="docStockCountDetail_columns">
        id,
        theory_stock_count,
        available_stock_count,
        defferent_reason,
        stock_count_header_id,
        stock_count_header_code,
        stock_count_user_id,
        stock_count_user_name,
        creater_id,
        act_stock_count,
        is_damaged,
        creater_name,
        gmt_create,
        gmt_modified,
        updater_name,
        line_status,
        updater_id,
        note,
        material_id
    </sql>

    <sql id="docStockCountDetail_sqlForInsert">
        theory_stock_count,
        available_stock_count,
        defferent_reason,
        stock_count_header_id,
        stock_count_header_code,
        stock_count_user_id,
        stock_count_user_name,
        creater_id,
        act_stock_count,
        is_damaged,
        creater_name,
        gmt_create,
        gmt_modified,
        updater_name,
        line_status,
        updater_id,
        note,
        material_id
    </sql>

    <sql id="docStockCountDetail_columnsForInsert">
        #{theoryStockCount},
        #{availableStockCount},
        #{defferentReason},
        #{stockCountHeaderId},
        #{stockCountHeaderCode},
        #{stockCountUserId},
        #{stockCountUserName},
        #{createrId},
        #{actStockCount},
        #{isDamaged},
        #{createrName},
        now(),
        now(),
        #{updaterName},
        #{lineStatus},
        #{updaterId},
        #{note},
        #{materialId}
    </sql>

    <sql id="docStockCountDetail_setterForUpdate">
        <set>
            gmt_modified = now(),
            <if test="id != null">
                id = #{id},
            </if>
            <if test="theoryStockCount != null">
                theory_stock_count = #{theoryStockCount},
            </if>
            <if test="availableStockCount != null">
                available_stock_count = #{availableStockCount},
            </if>
            <if test="defferentReason != null">
                defferent_reason = #{defferentReason},
            </if>
            <if test="stockCountHeaderId != null">
                stock_count_header_id = #{stockCountHeaderId},
            </if>
            <if test="stockCountHeaderCode != null">
                stock_count_header_code = #{stockCountHeaderCode},
            </if>
            <if test="stockCountUserId != null">
                stock_count_user_id = #{stockCountUserId},
            </if>
            <if test="stockCountUserName != null">
                stock_count_user_name = #{stockCountUserName},
            </if>
            <if test="createrId != null">
                creater_id = #{createrId},
            </if>
            <if test="actStockCount != null">
                act_stock_count = #{actStockCount},
            </if>
            <if test="isDamaged != null">
                is_damaged = #{isDamaged},
            </if>
            <if test="createrName != null">
                creater_name = #{createrName},
            </if>
            <if test="updaterName != null">
                updater_name = #{updaterName},
            </if>
            <if test="lineStatus != null">
                line_status = #{lineStatus},
            </if>
            <if test="updaterId != null">
                updater_id = #{updaterId},
            </if>
            <if test="note != null">
                note = #{note},
            </if>
            <if test="materialId != null">
                material_id = #{materialId},
            </if>
        </set>
    </sql>

    <sql id="docStockCountDetail_selector">
        select
        <include refid="docStockCountDetail_columns"/>
        from doc_stock_count_detail
    </sql>

    <sql id="docStockCountDetail_query_segment">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="data.id != null">
                AND id = #{data.id}
            </if>
            <if test="data.theoryStockCount != null">
                AND theory_stock_count = #{data.theoryStockCount}
            </if>
            <if test="data.availableStockCount != null">
                AND available_stock_count = #{data.availableStockCount}
            </if>
            <if test="data.defferentReason != null">
                AND defferent_reason = #{data.defferentReason}
            </if>
            <if test="data.stockCountHeaderId != null">
                AND stock_count_header_id = #{data.stockCountHeaderId}
            </if>
            <if test="data.stockCountHeaderCode != null">
                AND stock_count_header_code = #{data.stockCountHeaderCode}
            </if>
            <if test="data.stockCountUserId != null">
                AND stock_count_user_id = #{data.stockCountUserId}
            </if>
            <if test="data.stockCountUserName != null">
                AND stock_count_user_name = #{data.stockCountUserName}
            </if>
            <if test="data.createrId != null">
                AND creater_id = #{data.createrId}
            </if>
            <if test="data.actStockCount != null">
                AND act_stock_count = #{data.actStockCount}
            </if>
            <if test="data.isDamaged != null">
                AND is_damaged = #{data.isDamaged}
            </if>
            <if test="data.createrName != null">
                AND creater_name = #{data.createrName}
            </if>
            <if test="data.gmtCreate != null">
                AND gmt_create = #{data.gmtCreate}
            </if>
            <if test="data.gmtModified != null">
                AND gmt_modified = #{data.gmtModified}
            </if>
            <if test="data.updaterName != null">
                AND updater_name = #{data.updaterName}
            </if>
            <if test="data.lineStatus != null">
                AND line_status = #{data.lineStatus}
            </if>
            <if test="data.updaterId != null">
                AND updater_id = #{data.updaterId}
            </if>
            <if test="data.note != null">
                AND note = #{data.note}
            </if>
            <if test="data.materialId != null">
                AND material_id = #{data.materialId}
            </if>
            <if test="ins != null and ins != ''">
                AND
                <foreach collection="ins" item="item" open="(" separator="and" close=")">
                    ${item.column} in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="notIns != null and notIns != ''">
                AND
                <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                    ${item.column} not in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="equals != null and equals != ''">
                AND
                <foreach collection="equals" item="item" open="(" separator="and" close=")">
                    ${item.column} = ${item.value}
                </foreach>
            </if>
            <if test="notEquals != null and notEquals != ''">
                AND
                <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                    ${item.column} != ${item.value}
                </foreach>
            </if>
            <if test="lts != null and lts != ''">
                AND
                <foreach collection="lts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ < ]]> ${item.value}
                </foreach>
            </if>
            <if test="gts != null and gts != ''">
                AND
                <foreach collection="gts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ > ]]> ${item.value}
                </foreach>
            </if>
            <if test="likes != null and likes != ''">
                AND
                <foreach collection="likes" item="item" open="(" separator="and" close=")">
                    ${item.column} like concat('%', ${item.value}, '%')
                </foreach>
            </if>
            <if test="ltes != null and ltes != ''">
                AND
                <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ <= ]]> ${item.value}
                </foreach>
            </if>
            <if test="gtes != null and gtes != ''">
                AND
                <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> ${item.value}
                </foreach>
            </if>
            <if test="ranges != null and ranges != ''">
                AND
                <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
                </foreach>
            </if>
            AND is_delete = 0
        </trim>
    </sql>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        insert into doc_stock_count_detail
        (
        <include refid="docStockCountDetail_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="docStockCountDetail_columnsForInsert"/>
        ,0
        )
    </insert>

    <update id="update" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        update doc_stock_count_detail
        <include refid="docStockCountDetail_setterForUpdate" />
        where id = #{id}
        and is_delete = 0
    </update>


    <update id="updateByQuery" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        update doc_stock_count_detail
        <set>
            gmt_modified = now(),
            <if test="update.id != null">
                id = #{update.id},
            </if>
            <if test="update.theoryStockCount != null">
                theory_stock_count = #{update.theoryStockCount},
            </if>
            <if test="update.availableStockCount != null">
                available_stock_count = #{update.availableStockCount},
            </if>
            <if test="update.defferentReason != null">
                defferent_reason = #{update.defferentReason},
            </if>
            <if test="update.stockCountHeaderId != null">
                stock_count_header_id = #{update.stockCountHeaderId},
            </if>
            <if test="update.stockCountHeaderCode != null">
                stock_count_header_code = #{update.stockCountHeaderCode},
            </if>
            <if test="update.stockCountUserId != null">
                stock_count_user_id = #{update.stockCountUserId},
            </if>
            <if test="update.stockCountUserName != null">
                stock_count_user_name = #{update.stockCountUserName},
            </if>
            <if test="update.createrId != null">
                creater_id = #{update.createrId},
            </if>
            <if test="update.actStockCount != null">
                act_stock_count = #{update.actStockCount},
            </if>
            <if test="update.isDamaged != null">
                is_damaged = #{update.isDamaged},
            </if>
            <if test="update.createrName != null">
                creater_name = #{update.createrName},
            </if>
            <if test="update.updaterName != null">
                updater_name = #{update.updaterName},
            </if>
            <if test="update.lineStatus != null">
                line_status = #{update.lineStatus},
            </if>
            <if test="update.updaterId != null">
                updater_id = #{update.updaterId},
            </if>
            <if test="update.note != null">
                note = #{update.note},
            </if>
            <if test="update.materialId != null">
                material_id = #{update.materialId},
            </if>
        </set>
        <include refid="docStockCountDetail_query_segment"/>
    </update>


    <insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        insert into doc_stock_count_detail
        (
        <include refid="docStockCountDetail_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="docStockCountDetail_columnsForInsert"/>
        ,0
        )
        on duplicate key update
        gmt_modified = now()
        <if test="id != null">
            ,id = #{id}
        </if>
        <if test="theoryStockCount != null">
            ,theory_stock_count = #{theoryStockCount}
        </if>
        <if test="availableStockCount != null">
            ,available_stock_count = #{availableStockCount}
        </if>
        <if test="defferentReason != null">
            ,defferent_reason = #{defferentReason}
        </if>
        <if test="stockCountHeaderId != null">
            ,stock_count_header_id = #{stockCountHeaderId}
        </if>
        <if test="stockCountHeaderCode != null">
            ,stock_count_header_code = #{stockCountHeaderCode}
        </if>
        <if test="stockCountUserId != null">
            ,stock_count_user_id = #{stockCountUserId}
        </if>
        <if test="stockCountUserName != null">
            ,stock_count_user_name = #{stockCountUserName}
        </if>
        <if test="createrId != null">
            ,creater_id = #{createrId}
        </if>
        <if test="actStockCount != null">
            ,act_stock_count = #{actStockCount}
        </if>
        <if test="isDamaged != null">
            ,is_damaged = #{isDamaged}
        </if>
        <if test="createrName != null">
            ,creater_name = #{createrName}
        </if>
        <if test="updaterName != null">
            ,updater_name = #{updaterName}
        </if>
        <if test="lineStatus != null">
            ,line_status = #{lineStatus}
        </if>
        <if test="updaterId != null">
            ,updater_id = #{updaterId}
        </if>
        <if test="note != null">
            ,note = #{note}
        </if>
        <if test="materialId != null">
            ,material_id = #{materialId}
        </if>
    </insert>

    <!-- Delete -->
    <update id="delete">
        update doc_stock_count_detail
        set is_delete = 1, gmt_modified = now()
        <include refid="docStockCountDetail_query_segment"/>
    </update>
    <update id="deleteById">
        update doc_stock_count_detail
        set is_delete = 1, gmt_modified = now()
        where id = #{id}
    </update>





    <!-- query class -->
    <sql id="docStockCountDetail_groupBy">
        <if test="groupBys != null and groupBys != ''">
            group by
            <foreach collection="groupBys" item="item" open="" separator="," close="">
                ${item}
            </foreach>
        </if>
    </sql>

    <sql id="docStockCountDetail_orderby">
        <if test="orderBys != null and orderBys != ''">
            order by
            <foreach collection="orderBys" item="item" open="" separator="," close="">
                ${item.column} ${item.direction}
            </foreach>
        </if>
    </sql>


    <select id="query" resultMap="docStockCountDetailResult" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        <include refid="docStockCountDetail_selector"/>
        <include refid="docStockCountDetail_query_segment"/>
        <include refid="docStockCountDetail_groupBy"/>
        <include refid="docStockCountDetail_orderby"/>
    </select>

    <select id="query4Page" resultMap="docStockCountDetailResult" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        <include refid="docStockCountDetail_selector"/>
        <include refid="docStockCountDetail_query_segment"/>
        <include refid="docStockCountDetail_groupBy"/>
        <include refid="docStockCountDetail_orderby"/>
        limit ${startRowForMysql}, ${pageSize}
    </select>


    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM doc_stock_count_detail
        <include refid="docStockCountDetail_query_segment"/>
    </select>

    <select id="getById" resultMap="docStockCountDetailResult">
        <include refid="docStockCountDetail_selector"/>
        where id = #{id}
        and is_delete = 0
    </select>

    <select id="getByIdForUpdate" resultMap="docStockCountDetailResult">
        <include refid="docStockCountDetail_selector"/>
        where id = #{id}
        and is_delete = 0
        for update
    </select>

    <resultMap id="DocStockCountDetailDoResult" type="com.resto.shop.web.dto.DocStockCountDetailDo">
        <result column="actStockCount" property="actStockCount"/>
        <result column="theoryStockCount" property="theoryStockCount"/>
        <result column="stockCountHeaderId" property="stockCountHeaderId"/>
        <result column="id" property="id"/>
        <result column="defferent_reason" property="defferentReason"/>
        <result column="materialType" property="materialType"/>
        <result column="categoryOneName" property="categoryOneName"/>
        <result column="categoryTwoName" property="categoryTwoName"/>
        <result column="categoryThirdName" property="categoryThirdName"/>
        <result column="materialName" property="materialName"/>
        <result column="materialCode" property="materialCode"/>
        <result column="unitName" property="unitName"/>
        <result column="provinceName" property="provinceName"/>
        <result column="cityName" property="cityName"/>
        <result column="districtName" property="districtName"/>
        <result column="measureUnit" property="measureUnit"/>
        <result column="materialId" property="materialId"/>
    </resultMap>

    <select id="findStockDetailListById" resultMap="DocStockCountDetailDoResult">
        SELECT
            a.act_stock_count AS actStockCount,
            a.theory_stock_count AS theoryStockCount,
            a.defferent_reason AS defferentReason,
            a.stock_count_header_id as stockCountHeaderId,
            a.id,
            a.defferent_reason as defferentReason,
            b.materialType,
            b.categoryThirdName,
            b.measureUnit,
            b.specName,
            b.categoryOneName,
            b.categoryTwoName,
            b.materialName,
            b.materialCode,
            b.unitName,
            b.provinceName,
            b.cityName,
            b.districtName,
            b.id as materialId
        FROM
            `doc_stock_count_detail` a
        LEFT JOIN md_material_view b ON a.material_id = b.id
        WHERE a.stock_count_header_id = #{id}
    </select>

    <select id="selectMaterialId" resultMap="docStockCountDetailResult" parameterType="com.resto.shop.web.model.DocStockCountDetail">
        SELECT * FROM doc_stock_count_detail d WHERE d.stock_count_header_id=#{materialId}
    </select>
</mapper>
