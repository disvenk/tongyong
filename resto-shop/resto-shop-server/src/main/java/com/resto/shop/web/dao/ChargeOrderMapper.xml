<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.resto.shop.web.dao.ChargeOrderMapper">
  <resultMap id="BaseResultMap" type="com.resto.shop.web.model.ChargeOrder" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="charge_money" property="chargeMoney" jdbcType="DECIMAL" />
    <result column="reward_money" property="rewardMoney" jdbcType="DECIMAL" />
    <result column="order_state" property="orderState" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="brand_id" property="brandId" jdbcType="VARCHAR" />
    <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR" />
    <result column="charge_balance" property="chargeBalance" jdbcType="DECIMAL" />
    <result column="reward_balance" property="rewardBalance" jdbcType="DECIMAL" />
    <result column="total_balance" property="totalBalance" jdbcType="DECIMAL" />
    <result column="number_day_now" property="numberDayNow"/>
    <result column="arrival_amount" property="arrivalAmount"/>
    <result column="end_amount" property="endAmount"/>
    <result column="type" property="type"/>
    <result column="charge_setting_id" property="chargeSettingId"/>
    <association property="customer" javaType="com.resto.shop.web.model.Customer">
        <result column="wechat_id" property="wechatId"/>
        <result column="account_id" property="accountId"/>
    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    id, charge_money, reward_money, order_state, create_time, finish_time, customer_id,
    brand_id, shop_detail_id, charge_balance, reward_balance, total_balance, number_day_now, arrival_amount, end_amount, type, charge_setting_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tb_charge_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_charge_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.resto.shop.web.model.ChargeOrder" >
    insert into tb_charge_order (id, charge_money, reward_money, order_state, create_time, finish_time, customer_id, brand_id, shop_detail_id,
    charge_balance, reward_balance, total_balance, number_day_now, arrival_amount, end_amount, type, charge_setting_id
    )
    values (#{id,jdbcType=VARCHAR}, #{chargeMoney,jdbcType=DECIMAL}, #{rewardMoney,jdbcType=DECIMAL},
      #{orderState,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP},
      #{customerId,jdbcType=VARCHAR}, #{brandId,jdbcType=VARCHAR}, #{shopDetailId,jdbcType=VARCHAR},
      #{chargeBalance,jdbcType=DECIMAL}, #{rewardBalance,jdbcType=DECIMAL}, #{totalBalance,jdbcType=DECIMAL},
      #{numberDayNow}, #{arrivalAmount}, #{endAmount}, #{type}, #{chargeSettingId}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resto.shop.web.model.ChargeOrder" >
    insert into tb_charge_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chargeMoney != null" >
        charge_money,
      </if>
      <if test="rewardMoney != null" >
        reward_money,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="shopDetailId != null" >
        shop_detail_id,
      </if>
      <if test="chargeBalance != null" >
        charge_balance,
      </if>
      <if test="rewardBalance != null" >
        reward_balance,
      </if>
      <if test="totalBalance != null" >
        total_balance,
      </if>
      <if test="numberDayNow != null" >
        number_day_now,
      </if>
      <if test="arrivalAmount != null" >
        arrival_amount,
      </if>
      <if test="endAmount != null" >
        end_amount,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="chargeSettingId != null" >
        charge_setting_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="chargeMoney != null" >
        #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="rewardMoney != null" >
        #{rewardMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="shopDetailId != null" >
        #{shopDetailId,jdbcType=VARCHAR},
      </if>
      <if test="chargeBalance != null" >
        #{chargeBalance,jdbcType=DECIMAL},
      </if>
      <if test="rewardBalance != null" >
        #{rewardBalance,jdbcType=DECIMAL},
      </if>
      <if test="totalBalance != null" >
        #{totalBalance,jdbcType=DECIMAL},
      </if>
      <if test="numberDayNow != null" >
        #{numberDayNow},
      </if>
      <if test="arrivalAmount != null" >
        #{arrivalAmount},
      </if>
      <if test="endAmount != null" >
        #{endAmount},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="chargeSettingId != null" >
        #{chargeSettingId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.resto.shop.web.model.ChargeOrder" >
    update tb_charge_order
    <set >
      <if test="chargeMoney != null" >
        charge_money = #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="rewardMoney != null" >
        reward_money = #{rewardMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="shopDetailId != null" >
        shop_detail_id = #{shopDetailId,jdbcType=VARCHAR},
      </if>
      <if test="chargeBalance != null" >
        charge_balance = #{chargeBalance,jdbcType=DECIMAL},
      </if>
      <if test="rewardBalance != null" >
        reward_balance = #{rewardBalance,jdbcType=DECIMAL},
      </if>
      <if test="totalBalance != null" >
        total_balance = #{totalBalance,jdbcType=DECIMAL},
      </if>
      <if test="numberDayNow != null" >
        number_day_now = #{numberDayNow},
      </if>
      <if test="arrivalAmount != null" >
        arrival_amount = #{arrivalAmount},
      </if>
      <if test="endAmount != null" >
        end_amount = #{endAmount},
      </if>
      <if test="type != null" >
        `type` = #{type},
      </if>
      <if test="chargeSettingId != null" >
          charge_setting_id = #{chargeSettingId},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resto.shop.web.model.ChargeOrder" >
    update tb_charge_order
    set charge_money = #{chargeMoney,jdbcType=DECIMAL},
      reward_money = #{rewardMoney,jdbcType=DECIMAL},
      order_state = #{orderState,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      customer_id = #{customerId,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=VARCHAR},
      shop_detail_id = #{shopDetailId,jdbcType=VARCHAR},
      charge_balance = #{chargeBalance,jdbcType=DECIMAL},
      reward_balance = #{rewardBalance,jdbcType=DECIMAL},
      total_balance = #{totalBalance,jdbcType=DECIMAL},
      number_day_now = #{numberDayNow},
      arrival_amount = #{arrivalAmount},
      end_amount = #{endAmount},`type` = #{type},
      charge_setting_id = #{chargeSettingId}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectList" resultType="ChargeOrder">select * from tb_charge_order</select>
  <select id="selectTotalBalance" resultType="DECIMAL">
  	SELECT SUM(total_balance) FROM tb_charge_order
	WHERE order_state=1
	AND total_balance>0
	AND customer_id=#{0}
  </select>
  <select id="selectFirstBalanceOrder" resultType="ChargeOrder">
  	SELECT * FROM tb_charge_order
	WHERE order_state=1
	AND total_balance>0
	AND customer_id=#{0}
	ORDER BY finish_time
	LIMIT 0,1
  </select>



  <update id="updateBalance">
  	update tb_charge_order
  	set charge_balance = charge_balance-#{useCharge},
  	reward_balance = reward_balance-#{useReward},
  	total_balance = charge_balance+reward_balance
  	where id = #{id}
  </update>
  <update id="refundCharge">
  	update tb_charge_order
  	set charge_balance = charge_balance+#{0},
  	total_balance = charge_balance+reward_balance
  	where id=#{1}
  </update>

    <update id="refundMoney">
        update tb_charge_order
        set charge_balance = charge_balance+#{0},
        reward_balance = reward_balance+#{1},
        total_balance = charge_balance+reward_balance
        where id=#{2}
    </update>

  <update id="refundReward">
  	update tb_charge_order
  	set reward_balance = reward_balance+#{0},
  	total_balance = charge_balance+reward_balance
  	where id=#{1}
  </update>


    <select id="selectByDateAndShopId" resultType="com.resto.shop.web.model.ChargeOrder">
        SELECT
        id,
        create_time,
        order_state,
        charge_money,
        shop_detail_id,
        brand_id
        FROM
        tb_charge_order
        WHERE
        shop_detail_id = #{shopId} and
        <![CDATA[
        create_time>#{beginDate} and create_time<#{endDate}
        ]]>
        AND order_state = 1
    </select>

    <select id="selectByDateAndBrandId" resultType="com.resto.shop.web.model.ChargeOrder">
        SELECT
        id,
        order_state,
        charge_money,
        shop_detail_id,
        brand_id
        FROM
        tb_charge_order
        WHERE
        brand_id = #{brandId} and
        <![CDATA[
        create_time>#{beginDate} and create_time<#{endDate}
        ]]>
        AND order_state = 1
    </select>

	<select id="selectByShopToDay" parameterType="java.util.Map" resultType="java.util.Map">
		select tco.charge_money chargeMoney,tc.telephone from tb_charge_order tco
		inner join tb_customer tc on  tco.customer_id = tc.id
		where tco.shop_detail_id = #{shopId}
		and tco.order_state = 1
		and tco.finish_time &gt;= CONCAT(#{beginDate}, ' 00:00:00')
		and tco.finish_time &lt;= CONCAT(#{endDate}, ' 23:59:59')
	</select>

    <select id="selectListByDateAndShopId" resultType="ChargeOrder">
 SELECT
	c.id,
	c.charge_money,
	c.create_time,
	c.brand_id,
	c.shop_detail_id,
	c.type,
	u.telephone
FROM
	tb_charge_order c
LEFT JOIN tb_customer u ON c.customer_id = u.id
WHERE
	c.order_state = 1
	AND c.shop_detail_id=#{shopId}
	AND
   <![CDATA[
        c.create_time>#{beginDate} and c.create_time<#{endDate}
       ]]>

    </select>

    <select id="selectByCustomerIdAndBrandId" resultType="ChargeOrder">
        SELECT
	c.id,
	c.charge_money,
	c.create_time,
	c.brand_id,
	c.shop_detail_id,
	c.type,
	u.telephone
FROM
	tb_charge_order c
INNER JOIN tb_customer u ON c.customer_id = u.id
WHERE
	c.order_state = 1
AND c.brand_id =#{brandId}
AND u.id =#{customerId}
    </select>


  <select id="getChargeSumInfo" parameterType="java.util.Map" resultType="java.util.Map">
    select shop_detail_id shopId, COUNT(1) chargeCount, SUM(charge_money) chargeMoney from tb_charge_order where order_state = 1 and finish_time &gt;= CONCAT(#{beginDate}, ' 00:00:00') and finish_time &lt;= CONCAT(#{endDate}, ' 23:59:59')
    <if test="shopId != null">
      and shop_detail_id = #{shopId}
    </if>
    <if test="chart != null">
      GROUP BY shop_detail_id,customer_id
    </if>
    <if test="chart == null">
      GROUP BY customer_id
    </if>
  </select>

    <select id="selectCustomerChargeOrder" resultType="java.lang.String">
        select customer_id from tb_charge_order where order_state = 1
        <if test="list != null and list.size() > 0">
            and customer_id in
            <foreach collection="list" item="customerId" open="(" separator="," close=")">
                #{customerId}
            </foreach>
        </if>
    </select>


    <select id="selectTotalBalanceByTimeAndShopId" resultType="java.math.BigDecimal">

        select sum(charge_money)
        from tb_charge_order
        where order_state = 1
        <if test="shopId != null">
            and shop_detail_id = #{shopId}
        </if>
        and finish_time &gt;= CONCAT(#{monthBegin},' 00:00:00')
        and finish_time &lt;= CONCAT(#{monthEnd},' 23:59:59')

    </select>


  <select id="selectRemainderReturn" resultMap="BaseResultMap">
      SELECT
          tco.*,
          tc.wechat_id,
          tc.account_id
      FROM
          tb_charge_order tco
      INNER JOIN tb_customer tc ON tco.customer_id = tc.id
      WHERE
          tco.order_state = 1
      AND tco.number_day_now > 0
  </select>

  <select id="selectByCustomerIdNotChangeIdList" resultType="ChargeOrder">
    select * from tb_charge_order where order_state = 1 and charge_setting_id is null
    and reward_money = 0 and customer_id = #{customerId}
  </select>

  <select id="selectByCustomerIdNotChangeId" resultType="java.math.BigDecimal">
    select sum(charge_balance) from tb_charge_order where order_state = 1 and charge_setting_id is null
    and reward_money = 0 and customer_id = #{customerId}
  </select>
</mapper>
