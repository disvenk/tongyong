<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.resto.shop.web.dao.DocMaterialStockDao">

    <resultMap id="docMaterialStockResult" type="com.resto.shop.web.model.DocMaterialStock">
        <result column="id" property="id"/>
        <result column="act_stock_count" property="actStockCount"/>
        <result column="material_id" property="materialId"/>
        <result column="note" property="note"/>
        <result column="version" property="version"/>
        <result column="creater_id" property="createrId"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="updater_id" property="updaterId"/>
        <result column="shop_detail_id" property="shopDetailId"/>
        <result column="updater_name" property="updaterName"/>
        <result column="creater_name" property="createrName"/>
        <result column="theory_stock_count" property="theoryStockCount"/>
        <result column="material_stock_code" property="materialStockCode"/>
    </resultMap>

    <sql id="docMaterialStock_columns">
        id,
        act_stock_count,
        material_id,
        note,
        version,
        creater_id,
        gmt_create,
        gmt_modified,
        updater_id,
        shop_detail_id,
        updater_name,
        creater_name,
        theory_stock_count,
        material_stock_code
    </sql>

    <sql id="docMaterialStock_sqlForInsert">
        act_stock_count,
        material_id,
        note,
        version,
        creater_id,
        gmt_create,
        gmt_modified,
        updater_id,
        shop_detail_id,
        updater_name,
        creater_name,
        theory_stock_count,
        material_stock_code
    </sql>

    <sql id="docMaterialStock_columnsForInsert">
        #{actStockCount},
        #{materialId},
        #{note},
        #{version},
        #{createrId},
        now(),
        now(),
        #{updaterId},
        #{shopDetailId},
        #{updaterName},
        #{createrName},
        #{theoryStockCount},
        #{materialStockCode}
    </sql>

    <sql id="docMaterialStock_setterForUpdate">
        <set>
            gmt_modified = now(),
            <if test="id != null">
                id = #{id},
            </if>
            <if test="actStockCount != null">
                act_stock_count = #{actStockCount},
            </if>
            <if test="materialId != null">
                material_id = #{materialId},
            </if>
            <if test="note != null">
                note = #{note},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="createrId != null">
                creater_id = #{createrId},
            </if>
            <if test="updaterId != null">
                updater_id = #{updaterId},
            </if>
            <if test="shopDetailId != null">
                shop_detail_id = #{shopDetailId},
            </if>
            <if test="updaterName != null">
                updater_name = #{updaterName},
            </if>
            <if test="createrName != null">
                creater_name = #{createrName},
            </if>
            <if test="theoryStockCount != null">
                theory_stock_count = #{theoryStockCount},
            </if>
            <if test="materialStockCode != null">
                material_stock_code = #{materialStockCode},
            </if>
        </set>
    </sql>

    <sql id="docMaterialStock_selector">
        select
        <include refid="docMaterialStock_columns"/>
        from doc_material_stock
    </sql>

    <sql id="docMaterialStock_query_segment">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="data.id != null">
                AND id = #{data.id}
            </if>
            <if test="data.actStockCount != null">
                AND act_stock_count = #{data.actStockCount}
            </if>
            <if test="data.materialId != null">
                AND material_id = #{data.materialId}
            </if>
            <if test="data.note != null">
                AND note = #{data.note}
            </if>
            <if test="data.version != null">
                AND version = #{data.version}
            </if>
            <if test="data.createrId != null">
                AND creater_id = #{data.createrId}
            </if>
            <if test="data.gmtCreate != null">
                AND gmt_create = #{data.gmtCreate}
            </if>
            <if test="data.gmtModified != null">
                AND gmt_modified = #{data.gmtModified}
            </if>
            <if test="data.updaterId != null">
                AND updater_id = #{data.updaterId}
            </if>
            <if test="data.shopDetailId != null">
                AND shop_detail_id = #{data.shopDetailId}
            </if>
            <if test="data.updaterName != null">
                AND updater_name = #{data.updaterName}
            </if>
            <if test="data.createrName != null">
                AND creater_name = #{data.createrName}
            </if>
            <if test="data.theoryStockCount != null">
                AND theory_stock_count = #{data.theoryStockCount}
            </if>
            <if test="data.materialStockCode != null">
                AND material_stock_code = #{data.materialStockCode}
            </if>
            <if test="ins != null and ins != ''">
                AND
                <foreach collection="ins" item="item" open="(" separator="and" close=")">
                    ${item.column} in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="notIns != null and notIns != ''">
                AND
                <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                    ${item.column} not in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="equals != null and equals != ''">
                AND
                <foreach collection="equals" item="item" open="(" separator="and" close=")">
                    ${item.column} = ${item.value}
                </foreach>
            </if>
            <if test="notEquals != null and notEquals != ''">
                AND
                <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                    ${item.column} != ${item.value}
                </foreach>
            </if>
            <if test="lts != null and lts != ''">
                AND
                <foreach collection="lts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ < ]]> ${item.value}
                </foreach>
            </if>
            <if test="gts != null and gts != ''">
                AND
                <foreach collection="gts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ > ]]> ${item.value}
                </foreach>
            </if>
            <if test="likes != null and likes != ''">
                AND
                <foreach collection="likes" item="item" open="(" separator="and" close=")">
                    ${item.column} like concat('%', ${item.value}, '%')
                </foreach>
            </if>
            <if test="ltes != null and ltes != ''">
                AND
                <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ <= ]]> ${item.value}
                </foreach>
            </if>
            <if test="gtes != null and gtes != ''">
                AND
                <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> ${item.value}
                </foreach>
            </if>
            <if test="ranges != null and ranges != ''">
                AND
                <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
                </foreach>
            </if>
            AND is_delete = 0
        </trim>
    </sql>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocMaterialStock">
        insert into doc_material_stock
        (
        <include refid="docMaterialStock_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="docMaterialStock_columnsForInsert"/>
        ,0
        )
    </insert>

    <update id="update" parameterType="com.resto.shop.web.model.DocMaterialStock">
        update doc_material_stock
        <include refid="docMaterialStock_setterForUpdate" />
        where id = #{id}
        and is_delete = 0
    </update>


    <update id="updateByQuery" parameterType="com.resto.shop.web.model.DocMaterialStock">
        update doc_material_stock
        <set>
            gmt_modified = now(),
            <if test="update.id != null">
                id = #{update.id},
            </if>
            <if test="update.actStockCount != null">
                act_stock_count = #{update.actStockCount},
            </if>
            <if test="update.materialId != null">
                material_id = #{update.materialId},
            </if>
            <if test="update.note != null">
                note = #{update.note},
            </if>
            <if test="update.version != null">
                version = #{update.version},
            </if>
            <if test="update.createrId != null">
                creater_id = #{update.createrId},
            </if>
            <if test="update.updaterId != null">
                updater_id = #{update.updaterId},
            </if>
            <if test="update.shopDetailId != null">
                shop_detail_id = #{update.shopDetailId},
            </if>
            <if test="update.updaterName != null">
                updater_name = #{update.updaterName},
            </if>
            <if test="update.createrName != null">
                creater_name = #{update.createrName},
            </if>
            <if test="update.theoryStockCount != null">
                theory_stock_count = #{update.theoryStockCount},
            </if>
            <if test="update.materialStockCode != null">
                material_stock_code = #{update.materialStockCode},
            </if>
        </set>
        <include refid="docMaterialStock_query_segment"/>
    </update>


    <insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.DocMaterialStock">
        insert into doc_material_stock
        (
        <include refid="docMaterialStock_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="docMaterialStock_columnsForInsert"/>
        ,0
        )
        on duplicate key update
        gmt_modified = now()
        <if test="id != null">
            ,id = #{id}
        </if>
        <if test="actStockCount != null">
            ,act_stock_count = #{actStockCount}
        </if>
        <if test="materialId != null">
            ,material_id = #{materialId}
        </if>
        <if test="note != null">
            ,note = #{note}
        </if>
        <if test="version != null">
            ,version = #{version}
        </if>
        <if test="createrId != null">
            ,creater_id = #{createrId}
        </if>
        <if test="updaterId != null">
            ,updater_id = #{updaterId}
        </if>
        <if test="shopDetailId != null">
            ,shop_detail_id = #{shopDetailId}
        </if>
        <if test="updaterName != null">
            ,updater_name = #{updaterName}
        </if>
        <if test="createrName != null">
            ,creater_name = #{createrName}
        </if>
        <if test="theoryStockCount != null">
            ,theory_stock_count = #{theoryStockCount}
        </if>
        <if test="materialStockCode != null">
            ,material_stock_code = #{materialStockCode}
        </if>
    </insert>

    <!-- Delete -->
    <update id="delete">
        update doc_material_stock
        set is_delete = 1, gmt_modified = now()
        <include refid="docMaterialStock_query_segment"/>
    </update>
    <update id="deleteById">
        update doc_material_stock
        set is_delete = 1, gmt_modified = now()
        where id = #{id}
    </update>





    <!-- query class -->
    <sql id="docMaterialStock_groupBy">
        <if test="groupBys != null and groupBys != ''">
            group by
            <foreach collection="groupBys" item="item" open="" separator="," close="">
                ${item}
            </foreach>
        </if>
    </sql>

    <sql id="docMaterialStock_orderby">
        <if test="orderBys != null and orderBys != ''">
            order by
            <foreach collection="orderBys" item="item" open="" separator="," close="">
                ${item.column} ${item.direction}
            </foreach>
        </if>
    </sql>


    <select id="query" resultMap="docMaterialStockResult" parameterType="com.resto.shop.web.model.DocMaterialStock">
        <include refid="docMaterialStock_selector"/>
        <include refid="docMaterialStock_query_segment"/>
        <include refid="docMaterialStock_groupBy"/>
        <include refid="docMaterialStock_orderby"/>
    </select>

    <select id="query4Page" resultMap="docMaterialStockResult" parameterType="com.resto.shop.web.model.DocMaterialStock">
        <include refid="docMaterialStock_selector"/>
        <include refid="docMaterialStock_query_segment"/>
        <include refid="docMaterialStock_groupBy"/>
        <include refid="docMaterialStock_orderby"/>
        limit ${startRowForMysql}, ${pageSize}
    </select>


    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM doc_material_stock
        <include refid="docMaterialStock_query_segment"/>
    </select>

    <select id="getById" resultMap="docMaterialStockResult">
        <include refid="docMaterialStock_selector"/>
        where id = #{id}
        and is_delete = 0
    </select>

    <select id="getByIdForUpdate" resultMap="docMaterialStockResult">
        <include refid="docMaterialStock_selector"/>
        where id = #{id}
        and is_delete = 0
        for update
    </select>

    <select id="queryJoin4Page" resultType="com.resto.shop.web.dto.MaterialStockDo">
       SELECT
            b.materialName,
            b.categoryOneName,
            b.categoryOneId,
            b.unitName,
            b.measureUnit,
            b.specName,
            b.categoryTwoName,
            b.materialCode,
            b.categoryTwoId,
            b.materialName,
            b.materialType,
            b.categoryThirdName,
            b.categoryThirdId,
            b.printName,
            b.provinceName,
            b.cityName,
            b.districtName,
            a.act_stock_count AS actStockCount,
            a.alert_stock_count as 'alertStockCount',
            a.theory_stock_count as 'theoryStockCount',
            a.id,
            a.material_id as materialId
            FROM
                `doc_material_stock` a
            LEFT JOIN md_material_view b ON a.material_id = b.id
            WHERE
                shop_detail_id = #{shopId}
        <if test="startTime != null">
            <if test="endTime != null">
                AND gmt_create BETWEEN  #{startTime} and  #{endTime}
            </if>

        </if>



    </select>


    <select id="findStockByShopId" resultMap="docMaterialStockResult">
        <include refid="docMaterialStock_selector"/>
        where shop_detail_id = #{shopId}
        and material_id = #{materialId}
        and is_delete = 0
    </select>

</mapper>
