<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resto.shop.web.dao.MdSupplierContactDao">

    <resultMap id="mdSupplierContactResult" type="com.resto.shop.web.model.MdSupplierContact">
        <result column="id" property="id"/>
        <result column="sup_code" property="supCode"/>
        <result column="is_top" property="isTop"/>
        <result column="supplier_id" property="supplierId"/>
        <result column="contact" property="contact"/>
        <result column="creater_id" property="createrId"/>
        <result column="tel" property="tel"/>
        <result column="mobile" property="mobile"/>
        <result column="creater_name" property="createrName"/>
        <result column="email" property="email"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="position" property="position"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="updater_id" property="updaterId"/>
        <result column="updater_name" property="updaterName"/>
    </resultMap>

    <sql id="mdSupplierContact_columns">
        id,
        sup_code,
        is_top,
        supplier_id,
        contact,
        creater_id,
        tel,
        mobile,
        creater_name,
        email,
        gmt_modified,
        position,
        gmt_create,
        updater_id,
        updater_name
    </sql>

    <sql id="mdSupplierContact_sqlForInsert">
        sup_code,
        is_top,
        supplier_id,
        contact,
        creater_id,
        tel,
        mobile,
        creater_name,
        email,
        gmt_modified,
        position,
        gmt_create,
        updater_id,
        updater_name
    </sql>

    <sql id="mdSupplierContact_columnsForInsert">
        #{supCode},
        #{isTop},
        #{supplierId},
        #{contact},
        #{createrId},
        #{tel},
        #{mobile},
        #{createrName},
        #{email},
        now(),
        #{position},
        now(),
        #{updaterId},
        #{updaterName}
    </sql>

    <sql id="mdSupplierContact_setterForUpdate">
        <set>
            gmt_modified = now(),
            <if test="id != null">
                id = #{id},
            </if>
            <if test="supCode != null">
                sup_code = #{supCode},
            </if>
            <if test="isTop != null">
                is_top = #{isTop},
            </if>
            <if test="supplierId != null">
                supplier_id = #{supplierId},
            </if>
            <if test="contact != null">
                contact = #{contact},
            </if>
            <if test="createrId != null">
                creater_id = #{createrId},
            </if>
            <if test="tel != null">
                tel = #{tel},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="createrName != null">
                creater_name = #{createrName},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="position != null">
                position = #{position},
            </if>
            <if test="updaterId != null">
                updater_id = #{updaterId},
            </if>
            <if test="updaterName != null">
                updater_name = #{updaterName},
            </if>
        </set>
    </sql>

    <sql id="mdSupplierContact_selector">
        select
        <include refid="mdSupplierContact_columns"/>
        from md_supplier_contact
    </sql>

    <sql id="mdSupplierContact_query_segment">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="data.id != null">
                AND id = #{data.id}
            </if>
            <if test="data.supCode != null">
                AND sup_code = #{data.supCode}
            </if>
            <if test="data.isTop != null">
                AND is_top = #{data.isTop}
            </if>
            <if test="data.supplierId != null">
                AND supplier_id = #{data.supplierId}
            </if>
            <if test="data.contact != null">
                AND contact = #{data.contact}
            </if>
            <if test="data.createrId != null">
                AND creater_id = #{data.createrId}
            </if>
            <if test="data.tel != null">
                AND tel = #{data.tel}
            </if>
            <if test="data.mobile != null">
                AND mobile = #{data.mobile}
            </if>
            <if test="data.createrName != null">
                AND creater_name = #{data.createrName}
            </if>
            <if test="data.email != null">
                AND email = #{data.email}
            </if>
            <if test="data.gmtModified != null">
                AND gmt_modified = #{data.gmtModified}
            </if>
            <if test="data.position != null">
                AND position = #{data.position}
            </if>
            <if test="data.gmtCreate != null">
                AND gmt_create = #{data.gmtCreate}
            </if>
            <if test="data.updaterId != null">
                AND updater_id = #{data.updaterId}
            </if>
            <if test="data.updaterName != null">
                AND updater_name = #{data.updaterName}
            </if>
            <if test="ins != null and ins != ''">
                AND
                <foreach collection="ins" item="item" open="(" separator="and" close=")">
                    ${item.column} in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="notIns != null and notIns != ''">
                AND
                <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                    ${item.column} not in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </foreach>
            </if>
            <if test="equals != null and equals != ''">
                AND
                <foreach collection="equals" item="item" open="(" separator="and" close=")">
                    ${item.column} = ${item.value}
                </foreach>
            </if>
            <if test="notEquals != null and notEquals != ''">
                AND
                <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                    ${item.column} != ${item.value}
                </foreach>
            </if>
            <if test="lts != null and lts != ''">
                AND
                <foreach collection="lts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ < ]]> ${item.value}
                </foreach>
            </if>
            <if test="gts != null and gts != ''">
                AND
                <foreach collection="gts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ > ]]> ${item.value}
                </foreach>
            </if>
            <if test="likes != null and likes != ''">
                AND
                <foreach collection="likes" item="item" open="(" separator="and" close=")">
                    ${item.column} like concat('%', ${item.value}, '%')
                </foreach>
            </if>
            <if test="ltes != null and ltes != ''">
                AND
                <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ <= ]]> ${item.value}
                </foreach>
            </if>
            <if test="gtes != null and gtes != ''">
                AND
                <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> ${item.value}
                </foreach>
            </if>
            <if test="ranges != null and ranges != ''">
                AND
                <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
                </foreach>
            </if>
            AND is_delete = 0
        </trim>
    </sql>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.MdSupplierContact">
        insert into md_supplier_contact
        (
        <include refid="mdSupplierContact_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="mdSupplierContact_columnsForInsert"/>
        ,0
        )
    </insert>

    <update id="update" parameterType="com.resto.shop.web.model.MdSupplierContact">
        update md_supplier_contact
        <include refid="mdSupplierContact_setterForUpdate" />
        where id = #{id}
        and is_delete = 0
    </update>


    <update id="updateByQuery" parameterType="com.resto.shop.web.model.MdSupplierContact">
        update md_supplier_contact
        <set>
            gmt_modified = now(),
            <if test="update.id != null">
                id = #{update.id},
            </if>
            <if test="update.supCode != null">
                sup_code = #{update.supCode},
            </if>
            <if test="update.isTop != null">
                is_top = #{update.isTop},
            </if>
            <if test="update.supplierId != null">
                supplier_id = #{update.supplierId},
            </if>
            <if test="update.contact != null">
                contact = #{update.contact},
            </if>
            <if test="update.createrId != null">
                creater_id = #{update.createrId},
            </if>
            <if test="update.tel != null">
                tel = #{update.tel},
            </if>
            <if test="update.mobile != null">
                mobile = #{update.mobile},
            </if>
            <if test="update.createrName != null">
                creater_name = #{update.createrName},
            </if>
            <if test="update.email != null">
                email = #{update.email},
            </if>
            <if test="update.position != null">
                position = #{update.position},
            </if>
            <if test="update.updaterId != null">
                updater_id = #{update.updaterId},
            </if>
            <if test="update.updaterName != null">
                updater_name = #{update.updaterName},
            </if>
        </set>
        <include refid="mdSupplierContact_query_segment"/>
    </update>


    <insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.resto.shop.web.model.MdSupplierContact">
        insert into md_supplier_contact
        (
        <include refid="mdSupplierContact_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="mdSupplierContact_columnsForInsert"/>
        ,0
        )
        on duplicate key update
        gmt_modified = now()
        <if test="id != null">
            ,id = #{id}
        </if>
        <if test="supCode != null">
            ,sup_code = #{supCode}
        </if>
        <if test="isTop != null">
            ,is_top = #{isTop}
        </if>
        <if test="supplierId != null">
            ,supplier_id = #{supplierId}
        </if>
        <if test="contact != null">
            ,contact = #{contact}
        </if>
        <if test="createrId != null">
            ,creater_id = #{createrId}
        </if>
        <if test="tel != null">
            ,tel = #{tel}
        </if>
        <if test="mobile != null">
            ,mobile = #{mobile}
        </if>
        <if test="createrName != null">
            ,creater_name = #{createrName}
        </if>
        <if test="email != null">
            ,email = #{email}
        </if>
        <if test="position != null">
            ,position = #{position}
        </if>
        <if test="updaterId != null">
            ,updater_id = #{updaterId}
        </if>
        <if test="updaterName != null">
            ,updater_name = #{updaterName}
        </if>
    </insert>

    <!-- Delete -->
    <update id="delete">
        update md_supplier_contact
        set is_delete = 1, gmt_modified = now()
        <include refid="mdSupplierContact_query_segment"/>
    </update>
    <update id="deleteById">
        update md_supplier_contact
        set is_delete = 1, gmt_modified = now()
        where id = #{id}
    </update>





    <!-- query class -->
    <sql id="mdSupplierContact_groupBy">
        <if test="groupBys != null and groupBys != ''">
            group by
            <foreach collection="groupBys" item="item" open="" separator="," close="">
                ${item}
            </foreach>
        </if>
    </sql>

    <sql id="mdSupplierContact_orderby">
        <if test="orderBys != null and orderBys != ''">
            order by
            <foreach collection="orderBys" item="item" open="" separator="," close="">
                ${item.column} ${item.direction}
            </foreach>
        </if>
    </sql>


    <select id="query" resultMap="mdSupplierContactResult" parameterType="com.resto.shop.web.model.MdSupplierContact">
        <include refid="mdSupplierContact_selector"/>
        <include refid="mdSupplierContact_query_segment"/>
        <include refid="mdSupplierContact_groupBy"/>
        <include refid="mdSupplierContact_orderby"/>
    </select>

    <select id="query4Page" resultMap="mdSupplierContactResult" parameterType="com.resto.shop.web.model.MdSupplierContact">
        <include refid="mdSupplierContact_selector"/>
        <include refid="mdSupplierContact_query_segment"/>
        <include refid="mdSupplierContact_groupBy"/>
        <include refid="mdSupplierContact_orderby"/>
        limit ${startRowForMysql}, ${pageSize}
    </select>


    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM md_supplier_contact
        <include refid="mdSupplierContact_query_segment"/>
    </select>

    <select id="getById" resultMap="mdSupplierContactResult">
        <include refid="mdSupplierContact_selector"/>
        where id = #{id}
        and is_delete = 0
    </select>

    <select id="getByIdForUpdate" resultMap="mdSupplierContactResult">
        <include refid="mdSupplierContact_selector"/>
        where id = #{id}
        and is_delete = 0
        for update
    </select>

</mapper>