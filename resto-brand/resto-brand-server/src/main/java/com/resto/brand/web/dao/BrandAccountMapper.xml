<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.resto.brand.web.dao.BrandAccountMapper">
  <resultMap id="BaseResultMap" type="com.resto.brand.web.model.BrandAccount">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="brand_id" property="brandId" jdbcType="VARCHAR"/>
      <result column="brand_setting_id" property="brandSettingId" jdbcType="VARCHAR"/>
    <result column="account_balance" property="accountBalance" jdbcType="DECIMAL"/>
    <result column="amount_used" property="amountUsed" jdbcType="DECIMAL"/>
    <result column="total_invoice_amount" property="totalInvoiceAmount" jdbcType="DECIMAL"/>
    <result column="used_invoice_amount" property="usedInvoiceAmount" jdbcType="DECIMAL"/>
    <result column="remained_invoice_amount" property="remainedInvoiceAmount" jdbcType="DECIMAL"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
  </resultMap>

  <sql id="Base_Column_List">id, brand_id,brand_setting_id, account_balance, amount_used,  total_invoice_amount, used_invoice_amount, remained_invoice_amount, create_time, update_time</sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">select
    <include refid="Base_Column_List"/> from tb_brand_account where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">delete from tb_brand_account where id = #{id,jdbcType=INTEGER}</delete>
  <insert id="insert" parameterType="com.resto.brand.web.model.BrandAccount">insert into tb_brand_account (id, brand_id, account_balance, amount_used, total_invoice_amount, used_invoice_amount, remained_invoice_amount, create_time, update_time ) values (#{id,jdbcType=INTEGER}, #{brandId,jdbcType=VARCHAR}, #{accountBalance,jdbcType=DECIMAL}, #{amountUsed,jdbcType=DECIMAL},  #{totalInvoiceAmount,jdbcType=DECIMAL}, #{usedInvoiceAmount,jdbcType=DECIMAL}, #{remainedInvoiceAmount,jdbcType=DECIMAL},  #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP} )</insert>
  <insert id="insertSelective" parameterType="com.resto.brand.web.model.BrandAccount">insert into tb_brand_account
    <trim prefix="(" suffix=")" suffixOverrides=","> 
      <if test="id != null">id,</if>  
      <if test="brandId != null">brand_id,</if>
        <if test="brandSettingId != null">brand_setting_id,</if>
        <if test="accountBalance != null">account_balance,</if>
      <if test="amountUsed != null">amount_used,</if>  
      <if test="totalInvoiceAmount != null">total_invoice_amount,</if>
      <if test="usedInvoiceAmount != null">used_invoice_amount,</if>  
      <if test="remainedInvoiceAmount != null">remained_invoice_amount,</if>  
      <if test="createTime != null">create_time,</if>
      <if test="updateTime != null">update_time,</if> 
    </trim>  
    <trim prefix="values (" suffix=")" suffixOverrides=","> 
      <if test="id != null">#{id,jdbcType=INTEGER},</if>
      <if test="brandId != null">#{brandId,jdbcType=VARCHAR},</if>
        <if test="brandSettingId != null">#{brandSettingId,jdbcType=VARCHAR},</if>
        <if test="accountBalance != null">#{accountBalance,jdbcType=DECIMAL},</if>
      <if test="amountUsed != null">#{amountUsed,jdbcType=DECIMAL},</if>  
      <if test="totalInvoiceAmount != null">#{totalInvoiceAmount,jdbcType=DECIMAL},</if>
      <if test="usedInvoiceAmount != null">#{usedInvoiceAmount,jdbcType=DECIMAL},</if>  
      <if test="remainedInvoiceAmount != null">#{remainedInvoiceAmount,jdbcType=DECIMAL},</if>  
      <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
      <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if> 
    </trim> 
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.resto.brand.web.model.BrandAccount">update tb_brand_account
    <set> 
      <if test="brandId != null">brand_id = #{brandId,jdbcType=VARCHAR},</if>
      <if test="brandSettingId !=null">brand_setting_id = #{brandSettingId} </if>
      <if test="accountBalance != null">account_balance = #{accountBalance,jdbcType=DECIMAL},</if>  
      <if test="amountUsed != null">amount_used = #{amountUsed,jdbcType=DECIMAL},</if>  
      <if test="totalInvoiceAmount != null">total_invoice_amount = #{totalInvoiceAmount,jdbcType=DECIMAL},</if>
      <if test="usedInvoiceAmount != null">used_invoice_amount = #{usedInvoiceAmount,jdbcType=DECIMAL},</if>  
      <if test="remainedInvoiceAmount != null">remained_invoice_amount = #{remainedInvoiceAmount,jdbcType=DECIMAL},</if>  
      <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
      <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if> 
    </set> where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resto.brand.web.model.BrandAccount">update tb_brand_account set brand_id = #{brandId,jdbcType=VARCHAR},set brand_setting_id = #{brandSettingId,jdbcType=VARCHAR}, account_balance = #{accountBalance,jdbcType=DECIMAL}, amount_used = #{amountUsed,jdbcType=DECIMAL},  total_invoice_amount = #{totalInvoiceAmount,jdbcType=DECIMAL}, used_invoice_amount = #{usedInvoiceAmount,jdbcType=DECIMAL}, remained_invoice_amount = #{remainedInvoiceAmount,jdbcType=DECIMAL}, create_time = #{createTime,jdbcType=TIMESTAMP}, update_time = #{updateTime,jdbcType=TIMESTAMP} where id = #{id,jdbcType=INTEGER}</update>
  <select id="selectList" resultType="BrandAccount">
   select t.*,b.brand_name from tb_brand_account t
	LEFT JOIN brand b on t.brand_id = b.id
</select>

  <select id="selectByBrandId" resultType="com.resto.brand.web.model.BrandAccount">
      select * from tb_brand_account where brand_id =#{brandId}

  </select>

  <select id="selectByBrandSettingId" resultType="com.resto.brand.web.model.BrandAccount">
      select * from tb_brand_account where brand_setting_id =#{brandSettingId}
  </select>

  <!-- 充值 -->
  <update id="chargeAccount">
    UPDATE tb_brand_account SET
    update_time = #{Date},account_balance = account_balance+#{chargeMoney},total_invoice_amount=total_invoice_amount+#{chargeMoney},remained_invoice_amount = remained_invoice_amount+#{chargeMoney}
    where brand_id = #{brandId}
  </update>

  <update id="updateBlance">
	UPDATE tb_brand_account SET
    update_time = #{Date},account_balance = account_balance-#{payMoney}, amount_used = amount_used +#{payMoney}
    where id = #{id}

  </update>


</mapper>
