<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.resto.service.shop.mapper.AppraiseMapper">
    <resultMap id="BaseResultMap" type="com.resto.service.shop.entity.Appraise">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="feedback" property="feedback" jdbcType="VARCHAR"/>
        <result column="red_money" property="redMoney" jdbcType="DECIMAL"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="article_id" property="articleId" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="feedback_article" property="feedbackArticle" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">id, picture_url, level, create_time, content, status, type, feedback, red_money, customer_id, order_id, article_id, shop_detail_id</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">select
        <include refid="Base_Column_List"/>
        from tb_appraise where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="java.lang.String">delete from tb_appraise where id = #{id,jdbcType=VARCHAR}</delete>
    <insert id="insert"
            parameterType="com.resto.service.shop.entity.Appraise">insert into tb_appraise (id, picture_url, level, create_time, content, status, type, feedback, red_money, customer_id, order_id, article_id, shop_detail_id, feedback_article) values (#{id,jdbcType=VARCHAR}, #{pictureUrl,jdbcType=VARCHAR}, #{level,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{feedback,jdbcType=VARCHAR}, #{redMoney,jdbcType=DECIMAL}, #{customerId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, #{shopDetailId,jdbcType=VARCHAR}, #{feedbackArticle})</insert>
    <insert id="insertSelective" parameterType="com.resto.service.shop.entity.Appraise">insert into tb_appraise
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="pictureUrl != null">picture_url,</if>
            <if test="level != null">level,</if>
            <if test="createTime != null">create_time,</if>
            <if test="content != null">content,</if>
            <if test="status != null">status,</if>
            <if test="type != null">type,</if>
            <if test="feedback != null">feedback,</if>
            <if test="redMoney != null">red_money,</if>
            <if test="customerId != null">customer_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="articleId != null">article_id,</if>
            <if test="shopDetailId != null">shop_detail_id,</if>
            <if test="feedbackArticle != null">feedback_article,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="pictureUrl != null">#{pictureUrl,jdbcType=VARCHAR},</if>
            <if test="level != null">#{level,jdbcType=TINYINT},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="content != null">#{content,jdbcType=VARCHAR},</if>
            <if test="status != null">#{status,jdbcType=TINYINT},</if>
            <if test="type != null">#{type,jdbcType=TINYINT},</if>
            <if test="feedback != null">#{feedback,jdbcType=VARCHAR},</if>
            <if test="redMoney != null">#{redMoney,jdbcType=DECIMAL},</if>
            <if test="customerId != null">#{customerId,jdbcType=VARCHAR},</if>
            <if test="orderId != null">#{orderId,jdbcType=VARCHAR},</if>
            <if test="articleId != null">#{articleId,jdbcType=VARCHAR},</if>
            <if test="shopDetailId != null">#{shopDetailId,jdbcType=VARCHAR},</if>
            <if test="feedbackArticle != null">#{feedbackArticle,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.resto.service.shop.entity.Appraise">update tb_appraise
        <set>
            <if test="pictureUrl != null">picture_url = #{pictureUrl,jdbcType=VARCHAR},</if>
            <if test="level != null">level = #{level,jdbcType=TINYINT},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="content != null">content = #{content,jdbcType=VARCHAR},</if>
            <if test="status != null">status = #{status,jdbcType=TINYINT},</if>
            <if test="type != null">type = #{type,jdbcType=TINYINT},</if>
            <if test="feedback != null">feedback = #{feedback,jdbcType=VARCHAR},</if>
            <if test="redMoney != null">red_money = #{redMoney,jdbcType=DECIMAL},</if>
            <if test="customerId != null">customer_id = #{customerId,jdbcType=VARCHAR},</if>
            <if test="orderId != null">order_id = #{orderId,jdbcType=VARCHAR},</if>
            <if test="articleId != null">article_id = #{articleId,jdbcType=VARCHAR},</if>
            <if test="shopDetailId != null">shop_detail_id = #{shopDetailId,jdbcType=VARCHAR},</if>
            <if test="feedbackArticle != null">feedback_article = #{feedbackArticle,jdbcType=VARCHAR},</if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.resto.service.shop.entity.Appraise">update tb_appraise set picture_url = #{pictureUrl,jdbcType=VARCHAR}, level = #{level,jdbcType=TINYINT}, create_time = #{createTime,jdbcType=TIMESTAMP}, content = #{content,jdbcType=VARCHAR}, status = #{status,jdbcType=TINYINT}, type = #{type,jdbcType=TINYINT}, feedback = #{feedback,jdbcType=VARCHAR}, red_money = #{redMoney,jdbcType=DECIMAL}, customer_id = #{customerId,jdbcType=VARCHAR}, order_id = #{orderId,jdbcType=VARCHAR}, article_id = #{articleId,jdbcType=VARCHAR}, shop_detail_id = #{shopDetailId,jdbcType=VARCHAR}, feedback_article = #{feedbackArticle,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR}</update>
    <select id="selectList" resultType="Appraise">select * from tb_appraise</select>

    <select id="listAppraise" resultType="Appraise">
  	 SELECT a.id,a.CUSTOMER_ID,a.PICTURE_URL,a.ARTICLE_ID,a.shop_detail_id,a.TYPE,a.create_time,a.LEVEL,a.CONTENT,a.STATUS,a.FEEDBACK,a.feedback_article,c.NICKNAME,c.head_photo,c.sex
  	  from tb_appraise a LEFT JOIN tb_customer c on a.customer_id = c.id   	  
  	  where shop_detail_id=#{currentShopId} and LEVEL &gt;= #{minLevel} and content not like '%系统%'
  	  	and LEVEL &lt;= #{maxLevel} ORDER BY create_time DESC LIMIT #{currentPage},#{showCount}
  </select>
    <select id="selectDetailedById" resultType="Appraise">
  	 SELECT a.id, a.CUSTOMER_ID,a.PICTURE_URL,a.ARTICLE_ID,a.TYPE,a.create_time,a.LEVEL,a.CONTENT,a.STATUS,a.FEEDBACK,a.feedback_article,c.NICKNAME,c.head_photo,a.shop_detail_id
  	  from tb_appraise a LEFT JOIN tb_customer c on a.customer_id = c.id   	  
  	  where a.id=#{0}
  </select>

    <select id="appraiseCount" resultType="java.util.HashMap">
  	select count(*)  AS COUNT,AVG(LEVEL)*20  AS AVG_SCORE  from tb_appraise where shop_detail_id = #{currentShopId}
  </select>

    <select id="appraiseMonthCount" resultType="java.util.HashMap">
        <!--   	SELECT LEFT(create_time,7) AS YEARMONTH,COUNT(1) as COUNT,AVG(LEVEL)*20 AVG_SCORE FROM tb_appraise where -->
        <!--   	 shop_detail_id = #{currentShopId} GROUP BY yearmonth ORDER BY create_time DESC -->
        SELECT COUNT(1) AS COUNT,AVG(LEVEL)*20 AVG_SCORE,
        CASE WHEN DAY(create_time) BETWEEN 1 AND 10 THEN DATE_FORMAT(create_time,'%Y.%m.01~10')
        WHEN DAY(create_time) BETWEEN 11 AND 20 THEN DATE_FORMAT(create_time,'%Y.%m.11~20')
        ELSE CONCAT(DATE_FORMAT(create_time,'%Y.%m.21~'),DAY(LAST_DAY(create_time)))
        END AS YEARMONTH FROM tb_appraise
        where shop_detail_id=#{0}
        GROUP BY YEARMONTH
        ORDER BY CREATE_TIME DESC
        LIMIT 0,10
    </select>

    <select id="selectDeatilByOrderId" resultType="Appraise">select
        <include refid="Base_Column_List"/>from tb_appraise where order_id=#{orderId}
    </select>

    <select id="selectAppraiseByCustomerId" resultType="Appraise">
      select * from tb_appraise where customer_id = #{customerId} and shop_detail_id = #{shopId}
      and status = 1 order by create_time desc limit 1
  </select>

    <select id="selectCustomerAllAppraise" resultType="Appraise">
    select a.id,a.CUSTOMER_ID,a.PICTURE_URL,a.ARTICLE_ID,a.shop_detail_id,a.TYPE,a.create_time,a.LEVEL,a.CONTENT,a.STATUS,a.FEEDBACK,a.feedback_article,c.NICKNAME,c.head_photo
    from tb_appraise a LEFT JOIN tb_customer c on a.customer_id = c.id
    where a.customer_id = #{customerId} and a.status = 1 order by a.create_time desc
    LIMIT #{currentPage},#{showCount}
  </select>

    <select id="selectByCustomerCount" resultType="java.lang.Integer">
    select count(*) from tb_appraise where customer_id = #{customerId} and status = 1
  </select>

    <select id="selectByGoodAppraise" resultType="Appraise">
        select
        <include refid="Base_Column_List"/>
        from tb_appraise where level = 5 and picture_url is not null order by create_time desc limit 500
    </select>

    <select id="selectCustomerAppraiseAvg" parameterType="java.lang.String" resultType="java.util.Map">
  	select count(1) count,sum(`level`) sum from tb_appraise where customer_id = #{customerId}
  </select>

</mapper>